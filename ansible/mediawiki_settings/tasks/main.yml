---
# tasks file for mediawiki_settings

- name: Удалить конфиг MediaWiki
  ansible.builtin.file:
    path: /var/www/html/LocalSettings.php
    state: absent

- name: Запустить install.php для настройки init-конфига MediaWiki
  become_user: www-data
  ansible.builtin.command: |
    php /var/www/html/maintenance/install.php \
      --confpath=/var/www/html \
      --dbname="my_wiki" \
      --dbuser="wikiuser" \
      --dbpass="{{ postgres_wikiuser_password }}" \
      --dbserver="{{ wiki_db_master_ip }}" \
      --dbtype=postgres \
      --lang=ru \
      --pass="{{ mediawiki_admin_password }}" \
      --scriptpath="" \
      --server="http://{{ hostvars[inventory_hostname]['ansible_host'] }}" \
      "s20691161wiki" \
      "admin"
  args:
    creates: /var/www/html/LocalSettings.php  # Не запускать, если файл уже есть
  no_log: true  # Скрывыть пароли в логах
  when: inventory_hostname == wiki_media_init_vm

- name: Копировать init-конфиг в переменную var_config
  ansible.builtin.slurp:
    src: /var/www/html/LocalSettings.php
  register: var_config
  delegate_to: "{{ wiki_media_init_vm }}"
  when: inventory_hostname != wiki_media_init_vm

- name: Создать на вм конфиг из переменной var_config
  ansible.builtin.copy:
    content: "{{ var_config.content | b64decode }}"
    dest: /var/www/html/LocalSettings.php
  when: inventory_hostname != wiki_media_init_vm

- name: Подменить wgServer в конфиге
  ansible.builtin.replace:
    path: /var/www/html/LocalSettings.php
    regexp: "(\\$wgServer\\s*=\\s*[\"']).*?([\"'])"
    replace: "\\1http://{{ hostvars[inventory_hostname]['ansible_host'] }}\\2"
  when: inventory_hostname != wiki_media_init_vm

- name: Установить права на конфиг MediaWiki
  ansible.builtin.file:
    path: /var/www/html/LocalSettings.php
    owner: www-data
    group: www-data
    mode: '600'
